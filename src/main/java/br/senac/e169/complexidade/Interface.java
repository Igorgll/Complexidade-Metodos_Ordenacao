/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.senac.e169.complexidade;

/**
 *
 * @author igor
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dezPosicoesBtn = new javax.swing.JRadioButton();
        cemPosicoesBtn = new javax.swing.JRadioButton();
        milPosicoesBtn = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        ascBtn = new javax.swing.JRadioButton();
        dscBtn = new javax.swing.JRadioButton();
        geraVetorBtn = new javax.swing.JButton();
        insertionSortBtn = new javax.swing.JRadioButton();
        bubbleSortBtn = new javax.swing.JRadioButton();
        selectionSortBtn = new javax.swing.JRadioButton();
        quickSortBtn = new javax.swing.JRadioButton();
        mergeSortBtn = new javax.swing.JRadioButton();
        tempoExecucaoLabel = new javax.swing.JLabel();
        trocasLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        exibeVetor = new javax.swing.JScrollPane();
        vetorOrdenadoTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        mostraVetorGeradoTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Vetor:");

        dezPosicoesBtn.setText("10 posições");

        cemPosicoesBtn.setText("100 posições");

        milPosicoesBtn.setText("1000 posições");

        jLabel2.setText("Direcionamento:");

        ascBtn.setText("Ascendente");

        dscBtn.setText("Descendente");

        geraVetorBtn.setText("Gerar Vetor");
        geraVetorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geraVetorBtnActionPerformed(evt);
            }
        });

        insertionSortBtn.setText("InsertionSort");

        bubbleSortBtn.setText("BubbleSort");

        selectionSortBtn.setText("SelectionSort");

        quickSortBtn.setText("QuickSort");

        mergeSortBtn.setText("MergeSort");

        jLabel5.setText("Vetor Ordenado:");

        vetorOrdenadoTextArea.setColumns(20);
        vetorOrdenadoTextArea.setRows(5);
        exibeVetor.setViewportView(vetorOrdenadoTextArea);

        mostraVetorGeradoTextArea.setColumns(20);
        mostraVetorGeradoTextArea.setRows(5);
        jScrollPane1.setViewportView(mostraVetorGeradoTextArea);

        jLabel3.setText("Vetor Gerado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exibeVetor)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(insertionSortBtn)
                                                    .addGap(57, 57, 57)
                                                    .addComponent(bubbleSortBtn))
                                                .addComponent(tempoExecucaoLabel))
                                            .addGap(50, 50, 50)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(trocasLabel)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(selectionSortBtn)
                                                    .addGap(52, 52, 52)
                                                    .addComponent(quickSortBtn)
                                                    .addGap(51, 51, 51)
                                                    .addComponent(mergeSortBtn))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1)
                                                .addComponent(dezPosicoesBtn)
                                                .addComponent(cemPosicoesBtn)
                                                .addComponent(milPosicoesBtn))
                                            .addGap(40, 40, 40)
                                            .addComponent(jLabel2))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(167, 167, 167)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(ascBtn)
                                                    .addGap(101, 101, 101)
                                                    .addComponent(geraVetorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(dscBtn)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(26, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dezPosicoesBtn)
                    .addComponent(ascBtn)
                    .addComponent(geraVetorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dscBtn)
                    .addComponent(cemPosicoesBtn))
                .addGap(18, 18, 18)
                .addComponent(milPosicoesBtn)
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertionSortBtn)
                    .addComponent(bubbleSortBtn)
                    .addComponent(selectionSortBtn)
                    .addComponent(quickSortBtn)
                    .addComponent(mergeSortBtn))
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exibeVetor, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempoExecucaoLabel)
                    .addComponent(trocasLabel))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geraVetorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geraVetorBtnActionPerformed
          int positions = 0;
                if (dezPosicoesBtn.isSelected()) {
                    positions = 10;
                } else if (cemPosicoesBtn.isSelected()) {
                    positions = 100;
                } else if (milPosicoesBtn.isSelected()) {
                    positions = 1000;
                }

                int[] vetor = new int[positions];

                for (int i = 0; i < positions; i++) {
                    vetor[i] = i;
                }

                if (dscBtn.isSelected()) {
                    // Organizar em ordem descendente
                    for (int i = 0; i < positions / 2; i++) {
                        int temp = vetor[i];
                        vetor[i] = vetor[positions - 1 - i];
                        vetor[positions - 1 - i] = temp;
                    }
                }
                
                    StringBuilder vetorText = new StringBuilder();
                    for (int i = 0; i < vetor.length; i++) {
                        vetorText.append(vetor[i]).append(" ");
                    }
                        mostraVetorGeradoTextArea.setText(vetorText.toString());
                    
                    if(insertionSortBtn.isSelected()) {
                        int[] vetorOrdenado = vetor.clone();
                        long startTime = System.currentTimeMillis();
                        int trocas = InsertionSort.insertionSort(vetorOrdenado);
                        long endTime = System.currentTimeMillis();
                        long tempoExecucao = endTime - startTime;
                        
                        StringBuilder vetorTextOrdenado = new StringBuilder();
                        for (int i = 0; i < vetorOrdenado.length; i++) {
                            vetorTextOrdenado.append(vetorOrdenado[i]).append(" ");
                        }
                        vetorOrdenadoTextArea.setText(vetorTextOrdenado.toString());
                        
                        tempoExecucaoLabel.setText("Tempo(ms): " + tempoExecucao);
                        trocasLabel.setText("Trocas: " + trocas);
                        
                    } else if(bubbleSortBtn.isSelected()) {
                        int[] vetorOrdenado = vetor.clone();
                        long startTime = System.currentTimeMillis();
                        int trocas = BubbleSort.bubbleSort(vetorOrdenado);
                        long endTime = System.currentTimeMillis();
                        long tempoExecucao = endTime - startTime;
                        
                        StringBuilder vetorTextOrdenado = new StringBuilder();
                        for (int i = 0; i < vetorOrdenado.length; i++) {
                            vetorTextOrdenado.append(vetorOrdenado[i]).append(" ");
                        }
                        
                        vetorOrdenadoTextArea.setText(vetorTextOrdenado.toString());
                        
                        tempoExecucaoLabel.setText("Tempo(ms): " + tempoExecucao);
                        trocasLabel.setText("Trocas: " + trocas);
                        
                    } else if(selectionSortBtn.isSelected()) {
                        int[] vetorOrdenado = vetor.clone();
                        long startTime = System.currentTimeMillis();
                        int trocas = SelectionSort.selectionSort(vetorOrdenado);
                        long endTime = System.currentTimeMillis();
                        long tempoExecucao = endTime - startTime;
                        
                        StringBuilder vetorTextOrdenado = new StringBuilder();
                        for (int i = 0; i < vetorOrdenado.length; i++) {
                            vetorTextOrdenado.append(vetorOrdenado[i]).append(" ");
                        }
                        
                        vetorOrdenadoTextArea.setText(vetorTextOrdenado.toString());
                        
                        tempoExecucaoLabel.setText("Tempo(ms): " + tempoExecucao);
                        trocasLabel.setText("Trocas: " + trocas);
                        
                    } else if(quickSortBtn.isSelected()) {
                        int[] vetorOrdenado = vetor.clone();
                        long startTime = System.currentTimeMillis();
                        int trocas = QuickSort.quickSort(vetorOrdenado);
                        long endTime = System.currentTimeMillis();
                        long tempoExecucao = endTime - startTime;
                        
                        StringBuilder vetorTextOrdenado = new StringBuilder();
                        for (int i = 0; i < vetorOrdenado.length; i++) {
                            vetorTextOrdenado.append(vetorOrdenado[i]).append(" ");
                        }
                        
                        vetorOrdenadoTextArea.setText(vetorTextOrdenado.toString());
                        
                        tempoExecucaoLabel.setText("Tempo(ms): " + tempoExecucao);
                        trocasLabel.setText("Trocas: " + trocas);
                        
                    } else if(mergeSortBtn.isSelected()) {
                        int[] vetorOrdenado = vetor.clone();
                        long startTime = System.currentTimeMillis();
                        int trocas = MergeSort.mergeSort(vetorOrdenado);
                        long endTime = System.currentTimeMillis();
                        long tempoExecucao = endTime - startTime;
                        
                        StringBuilder vetorTextOrdenado = new StringBuilder();
                        for (int i = 0; i < vetorOrdenado.length; i++) {
                            vetorTextOrdenado.append(vetorOrdenado[i]).append(" ");
                        }
                        
                        vetorOrdenadoTextArea.setText(vetorTextOrdenado.toString());
                        
                        tempoExecucaoLabel.setText("Tempo(ms): " + tempoExecucao);
                        trocasLabel.setText("Trocas: " + trocas);
                    }
    }//GEN-LAST:event_geraVetorBtnActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascBtn;
    private javax.swing.JRadioButton bubbleSortBtn;
    private javax.swing.JRadioButton cemPosicoesBtn;
    private javax.swing.JRadioButton dezPosicoesBtn;
    private javax.swing.JRadioButton dscBtn;
    private javax.swing.JScrollPane exibeVetor;
    private javax.swing.JButton geraVetorBtn;
    private javax.swing.JRadioButton insertionSortBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mergeSortBtn;
    private javax.swing.JRadioButton milPosicoesBtn;
    private javax.swing.JTextArea mostraVetorGeradoTextArea;
    private javax.swing.JRadioButton quickSortBtn;
    private javax.swing.JRadioButton selectionSortBtn;
    private javax.swing.JLabel tempoExecucaoLabel;
    private javax.swing.JLabel trocasLabel;
    private javax.swing.JTextArea vetorOrdenadoTextArea;
    // End of variables declaration//GEN-END:variables
}
